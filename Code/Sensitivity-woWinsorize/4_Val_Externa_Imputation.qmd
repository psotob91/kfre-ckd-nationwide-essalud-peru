---
title: "External validation, recalibration, and clinical utility of the prognostic model kidney failure risk equation in patients with CKD stages G3-4: a nationwide retrospective cohort analysis in Peru" 
subtitle: "Main Analysis - Winsorization 1.5%: 4. External Validation"
author: "Percy Soto Becerra"
format: 
  html: 
   theme: cerulean
   toc: true
   number-sections: true
   df-print: paged
   page-layout: full
   embed-resources: true
   cache: false
execute: 
  warning: false
---

## Setup

```{r}
#| label: load-packages
#| include: true

rm(list = ls())

# Use pacman to check whether packages are installed, if not load
if (!require("pacman")) install.packages("pacman")
library(pacman)

# Unload all package to begin in a session with only base packages
pacman::p_unload(all)

# Install packages
pacman::p_load(
  rio, 
  here, 
  tidyverse, 
  gtools, 
  kableExtra, 
  patchwork, 
  flextable, 
  furrr, 
  parallel, 
  mice, 
  survival,
  prodlim, 
  cmprsk,
  riskRegression,
  splines
)

source(here("Code", "source", "kfre_pi.R"))
source(here("Code", "source", "kfre_pr.R"))
source(here("Code", "source", "oe_ratio.R"))
source(here("Code", "source", "calibration_intercept.R"))
source(here("Code", "source", "calibration_slope.R"))
source(here("Code", "source", "auc.R"))
source(here("Code", "source", "auc_brier_boot.R"))
source(here("Code", "source", "validate.mids.R"))
source(here("Code", "source", "pool.validate.mids.R"))
source(here("Code", "source", "pool.auc.mids.R"))
source(here("Code", "source", "process_imp_cal_plot.R"))
source(here("Code", "source", "predict.mira.R"))
source(here("Code", "source", "performance_measures.R"))
source(here("Code", "source", "tidy_performance_stack.R"))    
source(here("Code", "source", "tidy_pool.R")) 
source(here("Code", "source", "process_imp_cal_plot2.R")) 

seed <- 2014
```

## Load data

```{r}
# # Import data
imp.datosA <- readRDS(here::here("Data", "Tidy", "Sensitivity-woWinsorize", "data_impA.rds")) 
gc()
```

## Configurate cores for parallel processing

```{r}
n_cores <- detectCores()
n_cores <- (n_cores - 2) / 2
# Evaluate futures in parallel - max of two workers to avoid hogging resources
future::plan("multisession", workers = n_cores)
```

## Pre-processing data

```{r}
imp.datosA <- imp.datosA |> 
  mutate(risk2y = kfre_pr(imp.datosA, 2),
         risk5y = kfre_pr(imp.datosA, 5), 
         eventdf = factor(eventd)) |> 
  select(.imp, .id, time, eventd, eventdf, risk2y, risk5y) |>  
  filter(.imp != 0)
```


## Predictive Performance

### Calibration and Discrimination Measures

```{r}
future::plan("multisession", workers = n_cores)
results_stack3a4_2y <- tidy_performance_stack(imp.datosA, 
                                  horizon = 2, 
                                  primary_event = 1, 
                                  pred = "risk2y",
                                  seed = seed, 
                                  n_cores = n_cores)

rio::export(results_stack3a4_2y , here("Data", "Tidy", "Sensitivity-woWinsorize", 
                                       "res_valext__kfre_orig_stack3a4_2y.rds"))

future::plan("multisession", workers = n_cores)
results_stack3a4_5y <- tidy_performance_stack(imp.datosA, 
                                  horizon = 5, 
                                  primary_event = 1, 
                                  pred = "risk5y",
                                  seed = seed, 
                                  n_cores = n_cores)

rio::export(results_stack3a4_5y, here("Data", "Tidy", "Sensitivity-woWinsorize", 
                                      "res_valext_kfre_orig_stack3a4_5y.rds"))
```

```{r}
res_pool1 <- tidy_pool(results_stack3a4_2y) 

res_pool1 |> 
  kbl() |> 
  kable_classic(full_width = T, html_font = "Cambria")
```

```{r}
res_pool2 <- tidy_pool(results_stack3a4_5y) 

res_pool2 |> 
  kbl() |> 
  kable_classic(full_width = T, html_font = "Cambria")
```

```{r}
tab_res_2y <- res_pool1 |> 
  select(term, estimate, ll, ul) |> 
  mutate(
    across(c(estimate, ll, ul), ~ if_else(term == "Log OE ratio", exp(.x), .x)), 
    across(c(estimate, ll, ul), ~ if_else(term == "Logit AUC", exp(.x) / (1  + exp(.x)), .x)), 
    term = if_else(term == "Log OE ratio", "OE ratio", term), 
    term = if_else(term == "Logit AUC", "AUC", term), 
    across(c(estimate, ll, ul), ~ if_else(term %in% 
                                            c("Average predicted risk", 
                                              "Overall observerd risk", 
                                              "OE difference"), 100 * .x, .x)), 
    across(c(estimate, ll, ul), ~ round(.x, 2)), 
    measures = case_when(term == "Average predicted risk" ~ str_glue("{estimate}%"), 
                       term %in% c("Overall observerd risk", "OE difference") ~ str_glue("{estimate}% ({ll}% to {ul}%)"),
                       TRUE ~ str_glue("{estimate} ({ll} to {ul})")
                       )
    ) |> 
  select(term, measures) |> 
  mutate(grupo = c(rep("Calibration", 6), "Discrimination", "Overall performance"), 
         year = "2 years")

tab_res_5y <- res_pool2 |> 
  select(term, estimate, ll, ul) |> 
  mutate(
    across(c(estimate, ll, ul), ~ if_else(term == "Log OE ratio", exp(.x), .x)), 
    across(c(estimate, ll, ul), ~ if_else(term == "Logit AUC", exp(.x) / (1  + exp(.x)), .x)), 
    term = if_else(term == "Log OE ratio", "OE ratio", term), 
    term = if_else(term == "Logit AUC", "AUC", term), 
    across(c(estimate, ll, ul), ~ if_else(term %in% 
                                            c("Average predicted risk", 
                                              "Overall observerd risk", 
                                              "OE difference"), 100 * .x, .x)), 
    across(c(estimate, ll, ul), ~ round(.x, 2)), 
    measures = case_when(term == "Average predicted risk" ~ str_glue("{estimate}%"), 
                       term %in% c("Overall observerd risk", "OE difference") ~ str_glue("{estimate}% ({ll}% to {ul}%)"),
                       TRUE ~ str_glue("{estimate} ({ll} to {ul})")
                       )
    ) |> 
  select(term, measures) |> 
  mutate(grupo = c(rep("Calibration", 6), "Discrimination", "Overall performance"), 
         year = "5 years")

tab_res0 <- tab_res_2y |>
  bind_rows(tab_res_5y)

tab_res0 |> 
  as_grouped_data(groups = "year") |> 
  as_grouped_data(groups = "grupo") |> 
  flextable::as_flextable(hide_grouplabel = TRUE) |> 
  autofit() |> 
  set_header_labels(
    year = "Time horizon", 
    term = "Performance measure", 
    measures = "Original KFRE"
  ) |>  
  bold(j = 1) |> 
  set_caption("Table. Performance measures of KFRE in the external dataset of patients with CKD Stages 3a-4") |>  
  theme_booktabs() |>   
  bold(bold = TRUE, part = "header") -> table_perf_final

table_perf_final %>% 
  flextable::save_as_docx(path = here("Tables", "Sensitivity-woWinsorize", "Table_Imputed_Performance_Modelo_Original.docx"))

table_perf_final
```

```{r}
rm(list=ls()[! ls() %in% c("imp.datosA","vdata", "primary_event", "horizon", 
                           "process_imp_cal_plot", "seed", "n_cores")])
gc()
```

### Moderate calibration: Calibration curves lowess based on subdistributional hazards

```{r}
primary_event <- 1

n_internal_knots <- 5

# Seleccion del grupo: Stages 3-4----

# A 2 aÃ±os----
horizon <- 2

vdata <- imp.datosA %>% 
  rename(pred = risk2y) |> 
  select(.imp, .id, time, eventd, pred) |> 
  mutate(cll_pred = log(-log(1 - pred)))

rcs_vdata <- ns(vdata$cll_pred, df = n_internal_knots + 1)
colnames(rcs_vdata) <- paste0("basisf_", colnames(rcs_vdata))
knots <- attr(rcs_vdata, "knots")
bound.knots <-  attr(rcs_vdata, "Boundary.knots")

pp <- seq(min(vdata$pred), max(vdata$pred), length.out = 1000)
cll_pp <- log(-log(1 - pp))
rcs_cll_pp <- ns(cll_pp, knots = knots, Boundary.knots = bound.knots)
colnames(rcs_cll_pp) <- paste0("basisf_", colnames(rcs_cll_pp))

vdata_bis_pp <- cbind(pp, as.data.frame(rcs_cll_pp))

future::plan("multisession", workers = n_cores)
subdist_df_imp <- future_map(1:max(vdata$.imp),
                         process_imp_cal_plot, 
                         vdata = vdata, 
                         primary_event = primary_event, 
                         horizon = horizon, 
                         type = "subdist_hazard", 
                         n_internal_knots = n_internal_knots, 
                         vdata_bis_pp, 
                         .options = furrr_options(seed = seed, 
                                                  packages = c("riskRegression", 
                                                               "survival", 
                                                               "splines", 
                                                               "cmprsk",
                                                               "tidyverse")), 
                         .progress = TRUE)

# 5 knots seems to give somewhat equivalent graph to pseudo method with bw = 0.05
subdist_df_imp_obs <- subdist_df_imp |> 
  bind_rows() |> 
  filter(type == "observed")

subdist_df_stack <- subdist_df_imp_obs |>
  group_by(.imp) |> 
  mutate(deciles_risk = as.integer(quantcut(risk, seq(0, 1, by = 0.1)))) |> 
  group_by(.imp, deciles_risk) |> 
  summarise(obs_mean_imp = mean(obs), 
            risk_mean_imp = mean(risk)) |> 
  group_by(deciles_risk) |> 
  summarise(obs_mean_pool = mean(obs_mean_imp), 
            risk_mean_pool = mean(risk_mean_imp))
  
subdist_df_imp_fix <- subdist_df_imp |> 
  bind_rows() |>  
  filter(type == "fixed") |> 
  arrange(risk) |> 
  summarise(obs_pool = mean(obs), 
            .by = risk) |> 
  mutate(deciles_risk = quantcut(risk, seq(0, 1, by = 0.1)))

rio::export(subdist_df_imp, here("Data", "Tidy", "Sensitivity-woWinsorize", "subdist_df_imput_3a4_2y.rds"))
rio::export(subdist_df_stack, here("Data", "Tidy", "Sensitivity-woWinsorize", "subdist_df_deciles_3a4_2y.rds"))

cal_mod2y_imp <- subdist_df_imp_obs |> 
  select(.imp, risk, obs) |> 
  summarise(ICI = mean(abs(risk - obs)), 
            E50 = quantile(abs(risk - obs), c(0.5)), 
            E90 = quantile(abs(risk - obs), c(0.9)), 
            Emax = max(abs(risk - obs)), 
            root_square_bias = sqrt(mean((risk - obs) ^ 2)), 
            .by = ".imp"
  ) 

cal_mod2y_pool <- cal_mod2y_imp |> 
  summarise(ICI = mean(ICI), 
            E50 = mean(E50), 
            E90 = mean(E90), 
            Emax = mean(Emax), 
            root_square_bias = mean(root_square_bias)) |> 
  mutate(year = "2 years") |> 
  select(year, everything())

rio::export(cal_mod2y_imp, here("Data", "Tidy", "Sensitivity-woWinsorize", "cal_Original2y_imp.rds"))

# Grafico de calibracion
ggplot() +
  geom_abline(intercept = 0, slope = 1, colour = "red", linetype = 2) + 
  geom_line(data = subdist_df_imp_fix, 
            aes(x = risk, y = obs_pool),
            alpha = 0.5, color = "black") +
  geom_point(data = subdist_df_stack,
             aes(x = risk_mean_pool, y = obs_mean_pool),
             shape = 23,
             stroke = 0.1,
             fill = "blue") + 
  scale_y_continuous(breaks = seq(0, 1, 0.2), limits = c(0, 1)) +
  scale_x_continuous(breaks = seq(0, 1, 0.2), limits = c(0, 1)) +
  theme_bw() + 
  labs(x = "Predicted risks", y = "Observed outcome proportions") + 
  # geom_rug(data = subdist_df_stack,
  #          aes(x = risk_mean_pool, y = obs_mean_pool),
  #          alpha = 0.1) +
  coord_fixed(ratio = 1, expand = TRUE)  -> plot_mod0_2y

# Grafico de calibracion con curvas imputadas
plot_mod0_2y + 
  geom_line(data = subdist_df_imp_obs, 
            aes(x = risk, y = obs, group = .imp),
            alpha = 0.1, color = "#38B8F7") -> plot_mod0_imp_2y

# A 5 aÃ±os----
horizon <- 5

vdata <- imp.datosA %>% 
  rename(pred = risk5y) |> 
  select(.imp, .id, time, eventd, pred) |> 
  mutate(cll_pred = log(-log(1 - pred))) 

rcs_vdata <- ns(vdata$cll_pred, df = n_internal_knots + 1)
colnames(rcs_vdata) <- paste0("basisf_", colnames(rcs_vdata))
knots <- attr(rcs_vdata, "knots")
bound.knots <-  attr(rcs_vdata, "Boundary.knots")

pp <- seq(min(vdata$pred), max(vdata$pred), length.out = 1000)
cll_pp <- log(-log(1 - pp))
rcs_cll_pp <- ns(cll_pp, knots = knots, Boundary.knots = bound.knots)
colnames(rcs_cll_pp) <- paste0("basisf_", colnames(rcs_cll_pp))

vdata_bis_pp <- cbind(pp, as.data.frame(rcs_cll_pp))

future::plan("multisession", workers = n_cores)
subdist_df_imp <- future_map(1:max(vdata$.imp),
                         process_imp_cal_plot, 
                         vdata = vdata, 
                         primary_event = primary_event, 
                         horizon = horizon, 
                         type = "subdist_hazard", 
                         n_internal_knots = n_internal_knots, 
                         vdata_bis_pp, 
                         .options = furrr_options(seed = seed, 
                                                  packages = c("riskRegression", 
                                                               "survival", 
                                                               "splines", 
                                                               "cmprsk",
                                                               "tidyverse")), 
                         .progress = TRUE)

# 5 knots seems to give somewhat equivalent graph to pseudo method with bw = 0.05
subdist_df_imp_obs <- subdist_df_imp |> 
  bind_rows() |> 
  filter(type == "observed")

subdist_df_stack <- subdist_df_imp_obs |>
  group_by(.imp) |> 
  mutate(deciles_risk = as.integer(quantcut(risk, seq(0, 1, by = 0.1)))) |> 
  group_by(.imp, deciles_risk) |> 
  summarise(obs_mean_imp = mean(obs), 
            risk_mean_imp = mean(risk)) |> 
  group_by(deciles_risk) |> 
  summarise(obs_mean_pool = mean(obs_mean_imp), 
            risk_mean_pool = mean(risk_mean_imp))
  
subdist_df_imp_fix <- subdist_df_imp |> 
  bind_rows() |>  
  filter(type == "fixed") |> 
  arrange(risk) |> 
  summarise(obs_pool = mean(obs), 
            .by = risk) |> 
  mutate(deciles_risk = quantcut(risk, seq(0, 1, by = 0.1)))

rio::export(subdist_df_imp, here("Data", "Tidy", "Sensitivity-woWinsorize", "subdist_df_imput_3a4_5y.rds"))
rio::export(subdist_df_stack, here("Data", "Tidy", "Sensitivity-woWinsorize", "subdist_df_deciles_3a4_5y.rds"))

cal_mod5y_imp <- subdist_df_imp_obs |> 
  select(.imp, risk, obs) |> 
  summarise(ICI = mean(abs(risk - obs)), 
            E50 = quantile(abs(risk - obs), c(0.5)), 
            E90 = quantile(abs(risk - obs), c(0.9)), 
            Emax = max(abs(risk - obs)), 
            root_square_bias = sqrt(mean((risk - obs) ^ 2)), 
            .by = ".imp"
  ) 

cal_mod5y_pool <- cal_mod5y_imp |> 
  summarise(ICI = mean(ICI), 
            E50 = mean(E50), 
            E90 = mean(E90), 
            Emax = mean(Emax), 
            root_square_bias = mean(root_square_bias)) |> 
  mutate(year = "5 years") |> 
  select(year, everything())

rio::export(cal_mod5y_imp, here("Data", "Tidy", "Sensitivity-woWinsorize", "cal_Original5y_imp.rds"))
```


```{r}
# Grafico de calibracion
ggplot() +
  geom_abline(intercept = 0, slope = 1, colour = "red", linetype = 2) + 
  geom_line(data = subdist_df_imp_fix, 
            aes(x = risk, y = obs_pool),
            alpha = 0.5, color = "black") +
  geom_point(data = subdist_df_stack,
             aes(x = risk_mean_pool, y = obs_mean_pool),
             shape = 23,
             stroke = 0.1,
             fill = "blue", 
             alpha = 0.5) + 
  scale_y_continuous(breaks = seq(0, 1, 0.2), limits = c(0, 1)) +
  scale_x_continuous(breaks = seq(0, 1, 0.2), limits = c(0, 1)) +
  theme_bw() + 
  labs(x = "Predicted risks", y = "Observed outcome proportions") + 
  # geom_rug(data = subdist_df_stack,
  #          aes(x = risk_mean_pool, y = obs_mean_pool),
  #          alpha = 0.1) +
  coord_fixed(ratio = 1, expand = TRUE)  -> plot_mod0_5y

# Grafico de calibracion con curvas imputadas
plot_mod0_5y + 
  geom_line(data = subdist_df_imp_obs, 
            aes(x = risk, y = obs, group = .imp),
            alpha = 0.3, color = "#38B8F7") -> plot_mod0_imp_5y

## Grafico final
plot_mod0_2y <- plot_mod0_2y + 
  labs(title = "Original Model\n(2 year KFRE)") + 
  theme(plot.title = element_text(hjust = 0.5))

plot_mod0_5y <- plot_mod0_5y + 
  labs(title = "Original Model\n(5 year KFRE)") + 
  theme(plot.title = element_text(hjust = 0.5))

plot_mod0_imp_2y <- plot_mod0_imp_2y +
  labs(title = "Original Model\n(2 year KFRE)") +
  theme(plot.title = element_text(hjust = 0.5))

plot_mod0_imp_5y <- plot_mod0_imp_5y +
  labs(title = "Original Model\n(5 year KFRE)") +
  theme(plot.title = element_text(hjust = 0.5))

plot_cal_mod0 <- (plot_mod0_2y | plot_mod0_5y) + plot_annotation(tag_levels = "a")
plot_cal_imp_mod0 <- (plot_mod0_imp_2y | plot_mod0_imp_5y) + plot_annotation(tag_levels = "a")

export(plot_mod0_2y, here("Data", "Tidy", "Sensitivity-woWinsorize", "plot_mod0_2y.rds"))
export(plot_mod0_5y, here("Data", "Tidy", "Sensitivity-woWinsorize", "plot_mod0_5y.rds"))
export(plot_cal_mod0, here("Data", "Tidy", "Sensitivity-woWinsorize", "plot_cal_mod0.rds"))

export(plot_mod0_imp_2y, here("Data", "Tidy", "Sensitivity-woWinsorize", "plot_mod0_imp_2y.rds"))
export(plot_mod0_imp_5y, here("Data", "Tidy", "Sensitivity-woWinsorize", "plot_mod0_imp_5y.rds"))
export(plot_cal_imp_mod0, here("Data", "Tidy", "Sensitivity-woWinsorize", "plot_cal_imp_mod0.rds"))


ggsave(filename = "Plot_Calibration_imputed.jpeg", 
       device = "jpeg", 
       plot = plot_cal_mod0, 
       path = here("Figures", "Sensitivity-woWinsorize"), 
       scale = 2, 
       width = 12, 
       height = 6,
       units = "cm", 
       dpi = 1000)

ggsave(filename = "Plot_Calibration_imputed_estabilidad.jpeg", 
       device = "jpeg", 
       plot = plot_cal_imp_mod0, 
       path = here("Figures", "Sensitivity-woWinsorize"), 
       scale = 2, 
       width = 12, 
       height = 6,
       units = "cm", 
       dpi = 1000)

gc()
```

```{r}
#| fig.align: center
#| fig-cap: "Calibration curves for each group and prediction horizon"
knitr::include_graphics(here("Figures", "Sensitivity-woWinsorize", "Plot_Calibration_imputed.jpeg"))
```


```{r}
#| fig.align: center
#| fig-cap: "Calibration curves for each group and prediction horizon"
knitr::include_graphics(here("Figures", "Sensitivity-woWinsorize", "Plot_Calibration_imputed_estabilidad.jpeg"))
```

### Moderate Calibration

```{r}
cal_mod2y_pool |> 
  bind_rows(cal_mod5y_pool) |> 
  pivot_longer(cols = ICI:root_square_bias, 
               names_to = "metrica", 
               values_to = "modelo") |> 
  mutate(modelo = round(modelo, 3)) |> 
  as_grouped_data(groups = "year") |> 
  flextable::as_flextable(hide_grouplabel = TRUE) |> 
  autofit() |>  
  set_header_labels(
    year = "Time horizon", 
    metrica = "Performance measure", 
    modelo = "Original KFRE"
  ) |> 
  bold(i = c(1, 7), j = 1) |> 
  set_caption("Table. Moderate Calibration Metrics") |>  
  theme_booktabs() |>   
  bold(bold = TRUE, part = "header") -> table_cal_mod

table_cal_mod %>% 
  flextable::save_as_docx(path = here("Tables", "Sensitivity-woWinsorize", "Table_Imputed_Performance_Moderate_Cal_Modelo_Original.docx"))

table_cal_mod
```

## Reproducibility Ticket

```{r}
#| label: repro_ticket
#| column: page
#| echo: true
sessionInfo()
```

